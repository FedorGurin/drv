/*
===============================================================================
                            COPYRIGHT NOTICE



-------------------------------------------------------------------------------
$Workfile: rfm2g_regs.h $
$Revision: 17 $
$Modtime: 6/24/08 4:21p $
-------------------------------------------------------------------------------
    Description: Reflective Memory hardware register offset definitions
-------------------------------------------------------------------------------

	Revision History:
	Date         Who  Ver   Reason For Change
	-----------  ---  ----  ---------------------------------------------------
	11-OCT-2001  ML   1.0   Created.

===============================================================================
*/


#ifndef __MONNIK_REGS_H
#define __MONNIK_REGS_H


/* Device IDs of supported PCI, PMC, and CPCI Mon Nikolaenko       */
#define  DEVICE_ID_PCINIKMONITOR    0x0006    /* VEN_1172&DEV_0006          */

#define BASEMON    0x300000
/* общие  регистры   монитора  */
#define  RMASKINT  0x330  /*смещение относительно  базы  регистр маски прерыввния */
						  /*00000000  -всё прерывания разрешены
						  ffffffff  -всё прерывания запрещены */

#define  RINT      0x334  /* регистр прерывний 31р -Mon3  30 -Mon2  29р -Mon1 28р -Mon0 */

#define  RTIMER    0x3FC  /*регистр таймера 32 разряда мл. разряд  0.5 мкс */

#define  ADRMON(A)    (BASEMON+A)

/* частные   регистры  каналов  монитора */

#define  RREGIME    0 //регистр режима
/*
31..3рр - свободные,
31..24 рр - маски прерываний для режима КК
23..16 рр - маски прерываний для режима ОУ
7р - блокировка приемника rx [1] (1 - установлена блокировка, 0 - снята ),
6р - блокировка приемника rx[0] (1 - установлена блокировка, 0 - снята ),
5р - блокировка передатчика tx[1] (1 - установлена блокировка, 0 - снята ),
4р - блокировка передатчика tx[0] (1 - установлена блокировка, 0 - снята ),

3р - режим МНС  МКх(1 - установлен режим МН, 0 - снят режим МН),
2р - режим МН  МКх(1 - установлен режим МН, 0 - снят режим МН),
1р - режим ОУ МКх (1 - установлен режим ОУ, 0 - снят режим ОУ),
0р - режим КК МКх (1 - установлен режим КК, 0 - снят режим КК),
*/

#define  RNUMOU   0xE0 // регистр адр рег.  ОУ

/* Формат регистр номера ОУ
31р = 1 - поддерживается групповой режим;
30р = 1 - поддерживается адрес ОУ = 30;
29р = 1 - поддерживается адрес ОУ = 29;
28р = 1 - поддерживается адрес ОУ = 28;
----------------------------------------
------------------------------------------
1р = 1 - поддерживается адрес ОУ = 1;
0р = 1 - поддерживается адрес ОУ = 0;
*/

#define  RACTCANAL    0xD0 //регистра активизации канала монитора МКх
/*
15 -0рр = 15..0рр командного слова при получении которых начинается регистрация потока данных.
(15..11рр  - должны быть числе разрешенных).
 Значение 15..0рр =  FFFFh  позволяет регистрировать все сообщения игнорируя содержимое регистра управления
  300xE0h.
31 - 16рр =  15..0рр командного слова при получении которых заканчивается регистрация потока данных. (15..11рр должны быть  в числе разрешенных, но это игнорируется если задано разрешение регистрации любого сообщения -> 15..0рр =  FFFFh
*/
#define  RACTINTCANAL    0xD4 /*регистра активизации прерывний канала  монитора М
регистра активизации  прерываний монитора сообщений */
/*
31..8рр -разряд адреса озу при записи в который формируется прерывание.
( порог заполнения достигнут. Кратно 64 DWORD
*/

#define  RBEGZONECANAL    0xD8 /*регистра  начала зона данных монитора сообщений */
/*
31..8рр -разряд адреса ОЗУ  с которого начинается зона данных монитора сообщений.
		 Кратно 64 DWORD
*/

#define  RENDZONECANAL    0xDC /*регистра  конца зоны данных монитора сообщений */
/*
31..8рр -разряд адреса ОЗУ  с которого начинается зона данных монитора сообщений.
		 Кратно 64 DWORD
*/

#define  RCOUNTERREG    0xF0   /*регистр счетчика регистрации монитора */

#define  RCOUNTERCURRBASE     0xF4   /*регистр текущей  базы  канала монитора */

#define  OFFSET0       0
#define  OFFSET1       0x100
#define  OFFSET2       0x200
#define  OFFSET3       0x300

#define  ADRMONITORCANAL(A,B)  (BASEMON+ A + B)


/* Definition of the rfmor_intcsr (interrupt control/status) register        */
#endif /* __RFM2G_REGS_H */
